//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Variable;

namespace zenonExtensions
{
  public static class DriverExtension
  {
/// Sets Identification
    public static void SetName(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("Name", value);
    }

/// Gets Identification
    public static string GetName(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("Name");
    }

/// Sets Description
    public static void SetDescription(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("Description", value);
    }

/// Gets Description
    public static string GetDescription(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("Description");
    }

/// Sets File name
    public static void SetNameFile(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("NameFile", value);
    }

/// Gets File name
    public static string GetNameFile(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("NameFile");
    }

/// Sets Configuration
    public static void SetConfiguration(this IDriver driver, object value)
    {
      driver.SetDynamicProperty("Configuration", value);
    }

/// Gets Configuration
    public static object GetConfiguration(this IDriver driver)
    {
      return (object) driver.GetDynamicProperty("Configuration");
    }

/// Sets Smart Object
    public static void SetSOSourceName(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("SOSourceName", value);
    }

/// Gets Smart Object
    public static string GetSOSourceName(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("SOSourceName");
    }

/// Sets Equipment Groups
    public static void SetSystemModelGroup(this IDriver driver, object value)
    {
      driver.SetDynamicProperty("SystemModelGroup", value);
    }

/// Gets Equipment Groups
    public static object GetSystemModelGroup(this IDriver driver)
    {
      return (object) driver.GetDynamicProperty("SystemModelGroup");
    }

/// Sets External reference
    public static void SetExternalReference(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("ExternalReference", value);
    }

/// Gets External reference
    public static string GetExternalReference(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("ExternalReference");
    }

/// Sets Driver ID
    public static void SetDriverId(this IDriver driver, uint value)
    {
      driver.SetDynamicProperty("DriverId", value);
    }

/// Gets Driver ID
    public static uint GetDriverId(this IDriver driver)
    {
      return (uint) driver.GetDynamicProperty("DriverId");
    }

/// Sets Standard port
    public static void SetSimulPort(this IDriver driver, ushort value)
    {
      driver.SetDynamicProperty("SimulPort", value);
    }

/// Gets Standard port
    public static ushort GetSimulPort(this IDriver driver)
    {
      return (ushort) driver.GetDynamicProperty("SimulPort");
    }

/// Sets Event port
    public static void SetSimulEvPort(this IDriver driver, ushort value)
    {
      driver.SetDynamicProperty("SimulEvPort", value);
    }

/// Gets Event port
    public static ushort GetSimulEvPort(this IDriver driver)
    {
      return (ushort) driver.GetDynamicProperty("SimulEvPort");
    }

/// Sets Name
    public static void SetSimulName(this IDriver driver, string value)
    {
      driver.SetDynamicProperty("SimulName", value);
    }

/// Gets Name
    public static string GetSimulName(this IDriver driver)
    {
      return (string) driver.GetDynamicProperty("SimulName");
    }

  }
}