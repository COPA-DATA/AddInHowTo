//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Allocation;

namespace zenonExtensions
{
  public static class AllocationExtension
  {
/// Sets Name
    public static void SetName(this IAllocation varAssignment, string value)
    {
      varAssignment.SetDynamicProperty("Name", value);
    }

/// Gets Name
    public static string GetName(this IAllocation varAssignment)
    {
      return (string) varAssignment.GetDynamicProperty("Name");
    }

/// Sets Source variable
    public static void SetSourceVariable(this IAllocation varAssignment, object value)
    {
      varAssignment.SetDynamicProperty("SourceVariable", value);
    }

/// Gets Source variable
    public static object GetSourceVariable(this IAllocation varAssignment)
    {
      return (object) varAssignment.GetDynamicProperty("SourceVariable");
    }

/// Sets Target variable
    public static void SetTargetVariable(this IAllocation varAssignment, object value)
    {
      varAssignment.SetDynamicProperty("TargetVariable", value);
    }

/// Gets Target variable
    public static object GetTargetVariable(this IAllocation varAssignment)
    {
      return (object) varAssignment.GetDynamicProperty("TargetVariable");
    }

/// Sets Trigger variable
    public static void SetTriggerVariable(this IAllocation varAssignment, object value)
    {
      varAssignment.SetDynamicProperty("TriggerVariable", value);
    }

/// Gets Trigger variable
    public static object GetTriggerVariable(this IAllocation varAssignment)
    {
      return (object) varAssignment.GetDynamicProperty("TriggerVariable");
    }

/// Sets Trigger type
    public static void SetTriggerType(this IAllocation varAssignment, ushort value)
    {
      varAssignment.SetDynamicProperty("TriggerType", value);
    }

/// Gets Trigger type
    public static ushort GetTriggerType(this IAllocation varAssignment)
    {
      return (ushort) varAssignment.GetDynamicProperty("TriggerType");
    }

/// Sets Equipment Groups
    public static void SetSystemModelGroup(this IAllocation varAssignment, object value)
    {
      varAssignment.SetDynamicProperty("SystemModelGroup", value);
    }

/// Gets Equipment Groups
    public static object GetSystemModelGroup(this IAllocation varAssignment)
    {
      return (object) varAssignment.GetDynamicProperty("SystemModelGroup");
    }

  }
}