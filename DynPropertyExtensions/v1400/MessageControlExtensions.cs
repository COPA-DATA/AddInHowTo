//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.MessageControl;

namespace zenonExtensions
{
  public static class MessageControlExtension
  {
/// Sets Active during Service Engine start
    public static void SetActiveAtStartup(this IMessageControl messageControl, bool value)
    {
      messageControl.SetDynamicProperty("ActiveAtStartup", value);
    }

/// Gets Active during Service Engine start
    public static bool GetActiveAtStartup(this IMessageControl messageControl)
    {
      return (bool) messageControl.GetDynamicProperty("ActiveAtStartup");
    }

/// Sets Dynamic part of the subject
    public static void SetSubjectDyn(this IMessageControl messageControl, string value)
    {
      messageControl.SetDynamicProperty("SubjectDyn", value);
    }

/// Gets Dynamic part of the subject
    public static string GetSubjectDyn(this IMessageControl messageControl)
    {
      return (string) messageControl.GetDynamicProperty("SubjectDyn");
    }

/// Sets Maximum number of attempts
    public static void SetAttempts(this IMessageControl messageControl, short value)
    {
      messageControl.SetDynamicProperty("Attempts", value);
    }

/// Gets Maximum number of attempts
    public static short GetAttempts(this IMessageControl messageControl)
    {
      return (short) messageControl.GetDynamicProperty("Attempts");
    }

/// Sets Waiting period between trials and timeout
    public static void SetTimeToWait(this IMessageControl messageControl, short value)
    {
      messageControl.SetDynamicProperty("TimeToWait", value);
    }

/// Gets Waiting period between trials and timeout
    public static short GetTimeToWait(this IMessageControl messageControl)
    {
      return (short) messageControl.GetDynamicProperty("TimeToWait");
    }

/// Sets Log in CEL
    public static void SetCelDetail(this IMessageControl messageControl, short value)
    {
      messageControl.SetDynamicProperty("CelDetail", value);
    }

/// Gets Log in CEL
    public static short GetCelDetail(this IMessageControl messageControl)
    {
      return (short) messageControl.GetDynamicProperty("CelDetail");
    }

/// Sets Log manually deletion of messages in CEL.
    public static void SetLogDeleteActions(this IMessageControl messageControl, bool value)
    {
      messageControl.SetDynamicProperty("LogDeleteActions", value);
    }

/// Gets Log manually deletion of messages in CEL.
    public static bool GetLogDeleteActions(this IMessageControl messageControl)
    {
      return (bool) messageControl.GetDynamicProperty("LogDeleteActions");
    }

/// Sets Message sent
    public static void SetSentImage(this IMessageControl messageControl, string value)
    {
      messageControl.SetDynamicProperty("SentImage", value);
    }

/// Gets Message sent
    public static string GetSentImage(this IMessageControl messageControl)
    {
      return (string) messageControl.GetDynamicProperty("SentImage");
    }

/// Sets Sending message
    public static void SetSendingImage(this IMessageControl messageControl, string value)
    {
      messageControl.SetDynamicProperty("SendingImage", value);
    }

/// Gets Sending message
    public static string GetSendingImage(this IMessageControl messageControl)
    {
      return (string) messageControl.GetDynamicProperty("SendingImage");
    }

/// Sets Error during sending
    public static void SetErrorImage(this IMessageControl messageControl, string value)
    {
      messageControl.SetDynamicProperty("ErrorImage", value);
    }

/// Gets Error during sending
    public static string GetErrorImage(this IMessageControl messageControl)
    {
      return (string) messageControl.GetDynamicProperty("ErrorImage");
    }

/// Sets Message sent
    public static void SetSentColor(this IMessageControl messageControl, uint value)
    {
      messageControl.SetDynamicProperty("SentColor", value);
    }

/// Gets Message sent
    public static uint GetSentColor(this IMessageControl messageControl)
    {
      return (uint) messageControl.GetDynamicProperty("SentColor");
    }

/// Sets Sending message
    public static void SetSendingColor(this IMessageControl messageControl, uint value)
    {
      messageControl.SetDynamicProperty("SendingColor", value);
    }

/// Gets Sending message
    public static uint GetSendingColor(this IMessageControl messageControl)
    {
      return (uint) messageControl.GetDynamicProperty("SendingColor");
    }

/// Sets Error during sending
    public static void SetErrorColor(this IMessageControl messageControl, uint value)
    {
      messageControl.SetDynamicProperty("ErrorColor", value);
    }

/// Gets Error during sending
    public static uint GetErrorColor(this IMessageControl messageControl)
    {
      return (uint) messageControl.GetDynamicProperty("ErrorColor");
    }

  }
}