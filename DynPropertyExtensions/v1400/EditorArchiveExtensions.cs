//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Historian;

namespace zenonExtensions
{
  public static class EditorArchiveExtension
  {
/// Sets ShortName
    public static void SetShortName(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("ShortName", value);
    }

/// Gets ShortName
    public static string GetShortName(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("ShortName");
    }

/// Sets LongName
    public static void SetLongName(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("LongName", value);
    }

/// Gets LongName
    public static string GetLongName(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("LongName");
    }

/// Sets Lot variable
    public static void SetChargeVar(this IEditorArchive archiveED, object value)
    {
      archiveED.SetDynamicProperty("ChargeVar", value);
    }

/// Gets Lot variable
    public static object GetChargeVar(this IEditorArchive archiveED)
    {
      return (object) archiveED.GetDynamicProperty("ChargeVar");
    }

/// Sets IsChargeIdx
    public static void SetIsChargeIdx(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("IsChargeIdx", value);
    }

/// Gets IsChargeIdx
    public static bool GetIsChargeIdx(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("IsChargeIdx");
    }

/// Sets Format
    public static void SetFormat(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("Format", value);
    }

/// Gets Format
    public static string GetFormat(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("Format");
    }

/// Sets LastIndex
    public static void SetLastIndex(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("LastIndex", value);
    }

/// Gets LastIndex
    public static uint GetLastIndex(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("LastIndex");
    }

/// Sets Archive start
    public static void SetFktStart(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("FktStart", value);
    }

/// Gets Archive start
    public static uint GetFktStart(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("FktStart");
    }

/// Sets Archive end
    public static void SetFktEnd(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("FktEnd", value);
    }

/// Gets Archive end
    public static uint GetFktEnd(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("FktEnd");
    }

/// Sets Modus
    public static void SetModus(this IEditorArchive archiveED, ushort value)
    {
      archiveED.SetDynamicProperty("Modus", value);
    }

/// Gets Modus
    public static ushort GetModus(this IEditorArchive archiveED)
    {
      return (ushort) archiveED.GetDynamicProperty("Modus");
    }

/// Sets CycleStart
    public static void SetCycleStart(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("CycleStart", value);
    }

/// Gets CycleStart
    public static uint GetCycleStart(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("CycleStart");
    }

/// Sets Cycle
    public static void SetCycle(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("Cycle", value);
    }

/// Gets Cycle
    public static uint GetCycle(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("Cycle");
    }

/// Sets DataSource
    public static void SetDataSource(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("DataSource", value);
    }

/// Gets DataSource
    public static string GetDataSource(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("DataSource");
    }

/// Sets UseAzureServiceBus
    public static void SetUseAzureServiceBus(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("UseAzureServiceBus", value);
    }

/// Gets UseAzureServiceBus
    public static bool GetUseAzureServiceBus(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("UseAzureServiceBus");
    }

/// Sets AzureConnection
    public static void SetAzureConnection(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("AzureConnection", value);
    }

/// Gets AzureConnection
    public static string GetAzureConnection(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("AzureConnection");
    }

/// Sets SourceShortName
    public static void SetSourceShortName(this IEditorArchive archiveED, string value)
    {
      archiveED.SetDynamicProperty("SourceShortName", value);
    }

/// Gets SourceShortName
    public static string GetSourceShortName(this IEditorArchive archiveED)
    {
      return (string) archiveED.GetDynamicProperty("SourceShortName");
    }

/// Sets Trigger variable
    public static void SetEventVar(this IEditorArchive archiveED, object value)
    {
      archiveED.SetDynamicProperty("EventVar", value);
    }

/// Gets Trigger variable
    public static object GetEventVar(this IEditorArchive archiveED)
    {
      return (object) archiveED.GetDynamicProperty("EventVar");
    }

/// Sets Archive state variable
    public static void SetRunningStatusVar(this IEditorArchive archiveED, object value)
    {
      archiveED.SetDynamicProperty("RunningStatusVar", value);
    }

/// Gets Archive state variable
    public static object GetRunningStatusVar(this IEditorArchive archiveED)
    {
      return (object) archiveED.GetDynamicProperty("RunningStatusVar");
    }

/// Sets Variable for evacuation status
    public static void SetEvacuationStatusVar(this IEditorArchive archiveED, object value)
    {
      archiveED.SetDynamicProperty("EvacuationStatusVar", value);
    }

/// Gets Variable for evacuation status
    public static object GetEvacuationStatusVar(this IEditorArchive archiveED)
    {
      return (object) archiveED.GetDynamicProperty("EvacuationStatusVar");
    }

/// Sets Flags
    public static void SetFlags(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("Flags", value);
    }

/// Gets Flags
    public static uint GetFlags(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("Flags");
    }

/// Sets Unicode
    public static void SetUnicode(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("Unicode", value);
    }

/// Gets Unicode
    public static bool GetUnicode(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("Unicode");
    }

/// Sets StateF
    public static void SetStateF(this IEditorArchive archiveED, ulong value)
    {
      archiveED.SetDynamicProperty("StateF", value);
    }

/// Gets StateF
    public static ulong GetStateF(this IEditorArchive archiveED)
    {
      return (ulong) archiveED.GetDynamicProperty("StateF");
    }

/// Sets StateActiveF
    public static void SetStateActiveF(this IEditorArchive archiveED, ulong value)
    {
      archiveED.SetDynamicProperty("StateActiveF", value);
    }

/// Gets StateActiveF
    public static ulong GetStateActiveF(this IEditorArchive archiveED)
    {
      return (ulong) archiveED.GetDynamicProperty("StateActiveF");
    }

/// Sets StateFBanned
    public static void SetStateFBanned(this IEditorArchive archiveED, ulong value)
    {
      archiveED.SetDynamicProperty("StateFBanned", value);
    }

/// Gets StateFBanned
    public static ulong GetStateFBanned(this IEditorArchive archiveED)
    {
      return (ulong) archiveED.GetDynamicProperty("StateFBanned");
    }

/// Sets StateActiveFBanned
    public static void SetStateActiveFBanned(this IEditorArchive archiveED, ulong value)
    {
      archiveED.SetDynamicProperty("StateActiveFBanned", value);
    }

/// Gets StateActiveFBanned
    public static ulong GetStateActiveFBanned(this IEditorArchive archiveED)
    {
      return (ulong) archiveED.GetDynamicProperty("StateActiveFBanned");
    }

/// Sets TimeGap
    public static void SetTimeGap(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("TimeGap", value);
    }

/// Gets TimeGap
    public static uint GetTimeGap(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("TimeGap");
    }

/// Sets Offset
    public static void SetOffset(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("Offset", value);
    }

/// Gets Offset
    public static uint GetOffset(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("Offset");
    }

/// Sets Cyclic
    public static void SetCyclic(this IEditorArchive archiveED, sbyte value)
    {
      archiveED.SetDynamicProperty("Cyclic", value);
    }

/// Gets Cyclic
    public static sbyte GetCyclic(this IEditorArchive archiveED)
    {
      return (sbyte) archiveED.GetDynamicProperty("Cyclic");
    }

/// Sets BeginTime
    public static void SetBeginTime(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("BeginTime", value);
    }

/// Gets BeginTime
    public static uint GetBeginTime(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("BeginTime");
    }

/// Sets FileFormat
    public static void SetFileFormat(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("FileFormat", value);
    }

/// Gets FileFormat
    public static uint GetFileFormat(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("FileFormat");
    }

/// Sets Count
    public static void SetCount(this IEditorArchive archiveED, ushort value)
    {
      archiveED.SetDynamicProperty("Count", value);
    }

/// Gets Count
    public static ushort GetCount(this IEditorArchive archiveED)
    {
      return (ushort) archiveED.GetDynamicProperty("Count");
    }

/// Sets AuslUnicode
    public static void SetAuslUnicode(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("AuslUnicode", value);
    }

/// Gets AuslUnicode
    public static bool GetAuslUnicode(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("AuslUnicode");
    }

/// Sets Equipment Groups
    public static void SetSystemModelGroup(this IEditorArchive archiveED, object value)
    {
      archiveED.SetDynamicProperty("SystemModelGroup", value);
    }

/// Gets Equipment Groups
    public static object GetSystemModelGroup(this IEditorArchive archiveED)
    {
      return (object) archiveED.GetDynamicProperty("SystemModelGroup");
    }

/// Sets FilterHierarchic
    public static void SetFilterHierarchic(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("FilterHierarchic", value);
    }

/// Gets FilterHierarchic
    public static bool GetFilterHierarchic(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("FilterHierarchic");
    }

/// Sets Compressed
    public static void SetCompressed(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("Compressed", value);
    }

/// Gets Compressed
    public static bool GetCompressed(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("Compressed");
    }

/// Sets LotNamingTime
    public static void SetLotNamingTime(this IEditorArchive archiveED, ushort value)
    {
      archiveED.SetDynamicProperty("LotNamingTime", value);
    }

/// Gets LotNamingTime
    public static ushort GetLotNamingTime(this IEditorArchive archiveED)
    {
      return (ushort) archiveED.GetDynamicProperty("LotNamingTime");
    }

/// Sets UseSwingingDoorAlgorithm
    public static void SetUseSwingingDoorAlgorithm(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("UseSwingingDoorAlgorithm", value);
    }

/// Gets UseSwingingDoorAlgorithm
    public static bool GetUseSwingingDoorAlgorithm(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("UseSwingingDoorAlgorithm");
    }

/// Sets UseOffsetForAggregated
    public static void SetUseOffsetForAggregated(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("UseOffsetForAggregated", value);
    }

/// Gets UseOffsetForAggregated
    public static bool GetUseOffsetForAggregated(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("UseOffsetForAggregated");
    }

/// Sets EnableSpontaneousGapDetection
    public static void SetEnableSpontaneousGapDetection(this IEditorArchive archiveED, bool value)
    {
      archiveED.SetDynamicProperty("EnableSpontaneousGapDetection", value);
    }

/// Gets EnableSpontaneousGapDetection
    public static bool GetEnableSpontaneousGapDetection(this IEditorArchive archiveED)
    {
      return (bool) archiveED.GetDynamicProperty("EnableSpontaneousGapDetection");
    }

/// Sets MaxSpontaneousGapLength
    public static void SetMaxSpontaneousGapLength(this IEditorArchive archiveED, uint value)
    {
      archiveED.SetDynamicProperty("MaxSpontaneousGapLength", value);
    }

/// Gets MaxSpontaneousGapLength
    public static uint GetMaxSpontaneousGapLength(this IEditorArchive archiveED)
    {
      return (uint) archiveED.GetDynamicProperty("MaxSpontaneousGapLength");
    }

  }
}