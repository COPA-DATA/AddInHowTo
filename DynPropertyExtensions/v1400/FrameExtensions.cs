//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Frame;

namespace zenonExtensions
{
  public static class FrameExtension
  {
/// Sets Window style
    public static void SetStyle(this IFrame template, uint value)
    {
      template.SetDynamicProperty("Style", value);
    }

/// Gets Window style
    public static uint GetStyle(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("Style");
    }

/// Sets Name
    public static void SetTemplateName(this IFrame template, string value)
    {
      template.SetDynamicProperty("TemplateName", value);
    }

/// Gets Name
    public static string GetTemplateName(this IFrame template)
    {
      return (string) template.GetDynamicProperty("TemplateName");
    }

/// Sets Background color
    public static void SetBackgroundColor(this IFrame template, uint value)
    {
      template.SetDynamicProperty("BackgroundColor", value);
    }

/// Gets Background color
    public static uint GetBackgroundColor(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("BackgroundColor");
    }

/// Sets Always in the foreground
    public static void SetShowForeground(this IFrame template, bool value)
    {
      template.SetDynamicProperty("ShowForeground", value);
    }

/// Gets Always in the foreground
    public static bool GetShowForeground(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("ShowForeground");
    }

/// Sets Frame can be opened multiple times
    public static void SetOpenMultiple(this IFrame template, bool value)
    {
      template.SetDynamicProperty("OpenMultiple", value);
    }

/// Gets Frame can be opened multiple times
    public static bool GetOpenMultiple(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("OpenMultiple");
    }

/// Sets Close after losing focus
    public static void SetCloseOnClickOutside(this IFrame template, bool value)
    {
      template.SetDynamicProperty("CloseOnClickOutside", value);
    }

/// Gets Close after losing focus
    public static bool GetCloseOnClickOutside(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("CloseOnClickOutside");
    }

/// Sets Do not close after losing focus
    public static void SetIgnoreCloseOnClick(this IFrame template, bool value)
    {
      template.SetDynamicProperty("IgnoreCloseOnClick", value);
    }

/// Gets Do not close after losing focus
    public static bool GetIgnoreCloseOnClick(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("IgnoreCloseOnClick");
    }

/// Sets Smart Object
    public static void SetSOSourceName(this IFrame template, string value)
    {
      template.SetDynamicProperty("SOSourceName", value);
    }

/// Gets Smart Object
    public static string GetSOSourceName(this IFrame template)
    {
      return (string) template.GetDynamicProperty("SOSourceName");
    }

/// Sets Equipment Groups
    public static void SetSystemModelGroup(this IFrame template, object value)
    {
      template.SetDynamicProperty("SystemModelGroup", value);
    }

/// Gets Equipment Groups
    public static object GetSystemModelGroup(this IFrame template)
    {
      return (object) template.GetDynamicProperty("SystemModelGroup");
    }

/// Sets Freely defineable frame shape
    public static void SetUseFreeForming(this IFrame template, bool value)
    {
      template.SetDynamicProperty("UseFreeForming", value);
    }

/// Gets Freely defineable frame shape
    public static bool GetUseFreeForming(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("UseFreeForming");
    }

/// Sets Define free frame shape
    public static void SetDefineFreeForm(this IFrame template, object value)
    {
      template.SetDynamicProperty("DefineFreeForm", value);
    }

/// Gets Define free frame shape
    public static object GetDefineFreeForm(this IFrame template)
    {
      return (object) template.GetDynamicProperty("DefineFreeForm");
    }

/// Sets Left [pixels]
    public static void SetPosLeft(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosLeft", value);
    }

/// Gets Left [pixels]
    public static int GetPosLeft(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosLeft");
    }

/// Sets Right [pixels]
    public static void SetPosRight(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosRight", value);
    }

/// Gets Right [pixels]
    public static int GetPosRight(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosRight");
    }

/// Sets Top [pixels]
    public static void SetPosTop(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosTop", value);
    }

/// Gets Top [pixels]
    public static int GetPosTop(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosTop");
    }

/// Sets Bottom [pixels]
    public static void SetPosBottom(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosBottom", value);
    }

/// Gets Bottom [pixels]
    public static int GetPosBottom(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosBottom");
    }

/// Sets Width (maximum)  [pixels]
    public static void SetPosWidth(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosWidth", value);
    }

/// Gets Width (maximum)  [pixels]
    public static int GetPosWidth(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosWidth");
    }

/// Sets Height (maximum) [pixels]
    public static void SetPosHeight(this IFrame template, int value)
    {
      template.SetDynamicProperty("PosHeight", value);
    }

/// Gets Height (maximum) [pixels]
    public static int GetPosHeight(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PosHeight");
    }

/// Sets Opening size
    public static void SetOpeningSizeType(this IFrame template, uint value)
    {
      template.SetDynamicProperty("OpeningSizeType", value);
    }

/// Gets Opening size
    public static uint GetOpeningSizeType(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("OpeningSizeType");
    }

/// Sets Value (Opening size)
    public static void SetOpeningSizeValue(this IFrame template, uint value)
    {
      template.SetDynamicProperty("OpeningSizeValue", value);
    }

/// Gets Value (Opening size)
    public static uint GetOpeningSizeValue(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("OpeningSizeValue");
    }

/// Sets Limitation Minimum
    public static void SetMinSizeType(this IFrame template, uint value)
    {
      template.SetDynamicProperty("MinSizeType", value);
    }

/// Gets Limitation Minimum
    public static uint GetMinSizeType(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("MinSizeType");
    }

/// Sets Value (minimum)
    public static void SetMinSizeValue(this IFrame template, uint value)
    {
      template.SetDynamicProperty("MinSizeValue", value);
    }

/// Gets Value (minimum)
    public static uint GetMinSizeValue(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("MinSizeValue");
    }

/// Sets Move
    public static void SetLimitationType(this IFrame template, uint value)
    {
      template.SetDynamicProperty("LimitationType", value);
    }

/// Gets Move
    public static uint GetLimitationType(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("LimitationType");
    }

/// Sets Limitation
    public static void SetLimitationArea(this IFrame template, uint value)
    {
      template.SetDynamicProperty("LimitationArea", value);
    }

/// Gets Limitation
    public static uint GetLimitationArea(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("LimitationArea");
    }

/// Sets Minimum frame margin
    public static void SetLimitationContactPointSize(this IFrame template, uint value)
    {
      template.SetDynamicProperty("LimitationContactPointSize", value);
    }

/// Gets Minimum frame margin
    public static uint GetLimitationContactPointSize(this IFrame template)
    {
      return (uint) template.GetDynamicProperty("LimitationContactPointSize");
    }

/// Sets Positioning
    public static void SetPosType(this IFrame template, short value)
    {
      template.SetDynamicProperty("PosType", value);
    }

/// Gets Positioning
    public static short GetPosType(this IFrame template)
    {
      return (short) template.GetDynamicProperty("PosType");
    }

/// Sets Keep position and size on reopening
    public static void SetNoMoveOnReopen(this IFrame template, bool value)
    {
      template.SetDynamicProperty("NoMoveOnReopen", value);
    }

/// Gets Keep position and size on reopening
    public static bool GetNoMoveOnReopen(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("NoMoveOnReopen");
    }

/// Sets Vertical
    public static void SetRefVert(this IFrame template, short value)
    {
      template.SetDynamicProperty("RefVert", value);
    }

/// Gets Vertical
    public static short GetRefVert(this IFrame template)
    {
      return (short) template.GetDynamicProperty("RefVert");
    }

/// Sets Horizontal
    public static void SetRefHorz(this IFrame template, short value)
    {
      template.SetDynamicProperty("RefHorz", value);
    }

/// Gets Horizontal
    public static short GetRefHorz(this IFrame template)
    {
      return (short) template.GetDynamicProperty("RefHorz");
    }

/// Sets Alternative vertical
    public static void SetAltRefVert(this IFrame template, short value)
    {
      template.SetDynamicProperty("AltRefVert", value);
    }

/// Gets Alternative vertical
    public static short GetAltRefVert(this IFrame template)
    {
      return (short) template.GetDynamicProperty("AltRefVert");
    }

/// Sets Alternative horizontal
    public static void SetAltRefHorz(this IFrame template, short value)
    {
      template.SetDynamicProperty("AltRefHorz", value);
    }

/// Gets Alternative horizontal
    public static short GetAltRefHorz(this IFrame template)
    {
      return (short) template.GetDynamicProperty("AltRefHorz");
    }

/// Sets Vertical
    public static void SetPosVert(this IFrame template, short value)
    {
      template.SetDynamicProperty("PosVert", value);
    }

/// Gets Vertical
    public static short GetPosVert(this IFrame template)
    {
      return (short) template.GetDynamicProperty("PosVert");
    }

/// Sets Horizontal
    public static void SetPosHorz(this IFrame template, short value)
    {
      template.SetDynamicProperty("PosHorz", value);
    }

/// Gets Horizontal
    public static short GetPosHorz(this IFrame template)
    {
      return (short) template.GetDynamicProperty("PosHorz");
    }

/// Sets Vertical offset  [pixels]
    public static void SetPixelVert(this IFrame template, int value)
    {
      template.SetDynamicProperty("PixelVert", value);
    }

/// Gets Vertical offset  [pixels]
    public static int GetPixelVert(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PixelVert");
    }

/// Sets Horizontal offset [pixels]
    public static void SetPixelHorz(this IFrame template, int value)
    {
      template.SetDynamicProperty("PixelHorz", value);
    }

/// Gets Horizontal offset [pixels]
    public static int GetPixelHorz(this IFrame template)
    {
      return (int) template.GetDynamicProperty("PixelHorz");
    }

/// Sets Vertical
    public static void SetAltPosVert(this IFrame template, short value)
    {
      template.SetDynamicProperty("AltPosVert", value);
    }

/// Gets Vertical
    public static short GetAltPosVert(this IFrame template)
    {
      return (short) template.GetDynamicProperty("AltPosVert");
    }

/// Sets Horizontal
    public static void SetAltPosHorz(this IFrame template, short value)
    {
      template.SetDynamicProperty("AltPosHorz", value);
    }

/// Gets Horizontal
    public static short GetAltPosHorz(this IFrame template)
    {
      return (short) template.GetDynamicProperty("AltPosHorz");
    }

/// Sets Vertical offset  [pixels]
    public static void SetAltPixelVert(this IFrame template, int value)
    {
      template.SetDynamicProperty("AltPixelVert", value);
    }

/// Gets Vertical offset  [pixels]
    public static int GetAltPixelVert(this IFrame template)
    {
      return (int) template.GetDynamicProperty("AltPixelVert");
    }

/// Sets Horizontal offset [pixels]
    public static void SetAltPixelHorz(this IFrame template, int value)
    {
      template.SetDynamicProperty("AltPixelHorz", value);
    }

/// Gets Horizontal offset [pixels]
    public static int GetAltPixelHorz(this IFrame template)
    {
      return (int) template.GetDynamicProperty("AltPixelHorz");
    }

/// Sets Graphics File
    public static void SetBackgroundPicture(this IFrame template, string value)
    {
      template.SetDynamicProperty("BackgroundPicture", value);
    }

/// Gets Graphics File
    public static string GetBackgroundPicture(this IFrame template)
    {
      return (string) template.GetDynamicProperty("BackgroundPicture");
    }

/// Sets Alignment
    public static void SetBackgroundPictureStyle(this IFrame template, short value)
    {
      template.SetDynamicProperty("BackgroundPictureStyle", value);
    }

/// Gets Alignment
    public static short GetBackgroundPictureStyle(this IFrame template)
    {
      return (short) template.GetDynamicProperty("BackgroundPictureStyle");
    }

/// Sets BackgroundGraphicAlignment
    public static void SetBackgroundGraphicAlignment(this IFrame template, short value)
    {
      template.SetDynamicProperty("BackgroundGraphicAlignment", value);
    }

/// Gets BackgroundGraphicAlignment
    public static short GetBackgroundGraphicAlignment(this IFrame template)
    {
      return (short) template.GetDynamicProperty("BackgroundGraphicAlignment");
    }

/// Sets Border type
    public static void SetBorderStyle(this IFrame template, short value)
    {
      template.SetDynamicProperty("BorderStyle", value);
    }

/// Gets Border type
    public static short GetBorderStyle(this IFrame template)
    {
      return (short) template.GetDynamicProperty("BorderStyle");
    }

/// Sets FrameBorderStyle
    public static void SetFrameBorderStyle(this IFrame template, short value)
    {
      template.SetDynamicProperty("FrameBorderStyle", value);
    }

/// Gets FrameBorderStyle
    public static short GetFrameBorderStyle(this IFrame template)
    {
      return (short) template.GetDynamicProperty("FrameBorderStyle");
    }

/// Sets Title
    public static void SetShowTitle(this IFrame template, bool value)
    {
      template.SetDynamicProperty("ShowTitle", value);
    }

/// Gets Title
    public static bool GetShowTitle(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("ShowTitle");
    }

/// Sets System menu
    public static void SetShowSysMenu(this IFrame template, bool value)
    {
      template.SetDynamicProperty("ShowSysMenu", value);
    }

/// Gets System menu
    public static bool GetShowSysMenu(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("ShowSysMenu");
    }

/// Sets Min./Max. buttons
    public static void SetShowMinimize(this IFrame template, bool value)
    {
      template.SetDynamicProperty("ShowMinimize", value);
    }

/// Gets Min./Max. buttons
    public static bool GetShowMinimize(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("ShowMinimize");
    }

/// Sets Use standard position
    public static void SetStandardPosition(this IFrame template, bool value)
    {
      template.SetDynamicProperty("StandardPosition", value);
    }

/// Gets Use standard position
    public static bool GetStandardPosition(this IFrame template)
    {
      return (bool) template.GetDynamicProperty("StandardPosition");
    }

  }
}