//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Variable;

namespace zenonExtensions
{
  public static class EditorLimitValueExtension
  {
/// Sets Limit value active
    public static void SetActive(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Active", value);
    }

/// Gets Limit value active
    public static bool GetActive(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Active");
    }

/// Sets Limit value text
    public static void SetText(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("Text", value);
    }

/// Gets Limit value text
    public static string GetText(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("Text");
    }

/// Sets Limit Value
    public static void SetLimitValue(this IEditorLimitValue edLimit, double value)
    {
      edLimit.SetDynamicProperty("LimitValue", value);
    }

/// Gets Limit Value
    public static double GetLimitValue(this IEditorLimitValue edLimit)
    {
      return (double) edLimit.GetDynamicProperty("LimitValue");
    }

/// Sets Minimum/Maximum
    public static void SetIsMax(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("IsMax", value);
    }

/// Gets Minimum/Maximum
    public static bool GetIsMax(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("IsMax");
    }

/// Sets Threshold value
    public static void SetThresholdValue(this IEditorLimitValue edLimit, double value)
    {
      edLimit.SetDynamicProperty("ThresholdValue", value);
    }

/// Gets Threshold value
    public static double GetThresholdValue(this IEditorLimitValue edLimit)
    {
      return (double) edLimit.GetDynamicProperty("ThresholdValue");
    }

/// Sets Delay time [s]
    public static void SetDelay(this IEditorLimitValue edLimit, uint value)
    {
      edLimit.SetDynamicProperty("Delay", value);
    }

/// Gets Delay time [s]
    public static uint GetDelay(this IEditorLimitValue edLimit)
    {
      return (uint) edLimit.GetDynamicProperty("Delay");
    }

/// Sets Dynamic limit value active
    public static void SetIsVariable(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("IsVariable", value);
    }

/// Gets Dynamic limit value active
    public static bool GetIsVariable(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("IsVariable");
    }

/// Sets Variable
    public static void SetVariable(this IEditorLimitValue edLimit, object value)
    {
      edLimit.SetDynamicProperty("Variable", value);
    }

/// Gets Variable
    public static object GetVariable(this IEditorLimitValue edLimit)
    {
      return (object) edLimit.GetDynamicProperty("Variable");
    }

/// Sets Limit value color
    public static void SetColor(this IEditorLimitValue edLimit, uint value)
    {
      edLimit.SetDynamicProperty("Color", value);
    }

/// Gets Limit value color
    public static uint GetColor(this IEditorLimitValue edLimit)
    {
      return (uint) edLimit.GetDynamicProperty("Color");
    }

/// Sets Invisible
    public static void SetInvisible(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Invisible", value);
    }

/// Gets Invisible
    public static bool GetInvisible(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Invisible");
    }

/// Sets Flashing
    public static void SetBlinking(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Blinking", value);
    }

/// Gets Flashing
    public static bool GetBlinking(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Blinking");
    }

/// Sets Additional information 1
    public static void SetUserProperty1(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("UserProperty1", value);
    }

/// Gets Additional information 1
    public static string GetUserProperty1(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("UserProperty1");
    }

/// Sets Additional information 2
    public static void SetUserProperty2(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("UserProperty2", value);
    }

/// Gets Additional information 2
    public static string GetUserProperty2(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("UserProperty2");
    }

/// Sets In Alarm Message List
    public static void SetAlarm(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Alarm", value);
    }

/// Gets In Alarm Message List
    public static bool GetAlarm(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Alarm");
    }

/// Sets In Chronological Event List
    public static void SetCel(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Cel", value);
    }

/// Gets In Chronological Event List
    public static bool GetCel(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Cel");
    }

/// Sets To acknowledge
    public static void SetAlarmAcknowledge(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("AlarmAcknowledge", value);
    }

/// Gets To acknowledge
    public static bool GetAlarmAcknowledge(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("AlarmAcknowledge");
    }

/// Sets Comment required
    public static void SetAlarmComment(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("AlarmComment", value);
    }

/// Gets Comment required
    public static bool GetAlarmComment(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("AlarmComment");
    }

/// Sets Alarm cause required
    public static void SetAlarmCause(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("AlarmCause", value);
    }

/// Gets Alarm cause required
    public static bool GetAlarmCause(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("AlarmCause");
    }

/// Sets Two-stage acknowledgement
    public static void SetAlarmDelete(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("AlarmDelete", value);
    }

/// Gets Two-stage acknowledgement
    public static bool GetAlarmDelete(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("AlarmDelete");
    }

/// Sets Print
    public static void SetPrint(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("Print", value);
    }

/// Gets Print
    public static bool GetPrint(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("Print");
    }

/// Sets Alarm/event group
    public static void SetGroup(this IEditorLimitValue edLimit, ushort value)
    {
      edLimit.SetDynamicProperty("Group", value);
    }

/// Gets Alarm/event group
    public static ushort GetGroup(this IEditorLimitValue edLimit)
    {
      return (ushort) edLimit.GetDynamicProperty("Group");
    }

/// Sets GroupName
    public static void SetGroupName(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("GroupName", value);
    }

/// Gets GroupName
    public static string GetGroupName(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("GroupName");
    }

/// Sets Alarm/event class
    public static void SetClass(this IEditorLimitValue edLimit, ushort value)
    {
      edLimit.SetDynamicProperty("Class", value);
    }

/// Gets Alarm/event class
    public static ushort GetClass(this IEditorLimitValue edLimit)
    {
      return (ushort) edLimit.GetDynamicProperty("Class");
    }

/// Sets ClassName
    public static void SetClassName(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("ClassName", value);
    }

/// Gets ClassName
    public static string GetClassName(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("ClassName");
    }

/// Sets Help file
    public static void SetHelpFile(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("HelpFile", value);
    }

/// Gets Help file
    public static string GetHelpFile(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("HelpFile");
    }

/// Sets Help chapter
    public static void SetHelpCapture(this IEditorLimitValue edLimit, string value)
    {
      edLimit.SetDynamicProperty("HelpCapture", value);
    }

/// Gets Help chapter
    public static string GetHelpCapture(this IEditorLimitValue edLimit)
    {
      return (string) edLimit.GetDynamicProperty("HelpCapture");
    }

/// Sets FlagActiv
    public static void SetFlagActiv(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagActiv", value);
    }

/// Gets FlagActiv
    public static bool GetFlagActiv(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagActiv");
    }

/// Sets FlagAlarm
    public static void SetFlagAlarm(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagAlarm", value);
    }

/// Gets FlagAlarm
    public static bool GetFlagAlarm(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagAlarm");
    }

/// Sets FlagDelay
    public static void SetFlagDelay(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagDelay", value);
    }

/// Gets FlagDelay
    public static bool GetFlagDelay(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagDelay");
    }

/// Sets FlagAColor
    public static void SetFlagAColor(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagAColor", value);
    }

/// Gets FlagAColor
    public static bool GetFlagAColor(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagAColor");
    }

/// Sets FlagGroup
    public static void SetFlagGroup(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagGroup", value);
    }

/// Gets FlagGroup
    public static bool GetFlagGroup(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagGroup");
    }

/// Sets FlagClassID
    public static void SetFlagClassID(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagClassID", value);
    }

/// Gets FlagClassID
    public static bool GetFlagClassID(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagClassID");
    }

/// Sets FlagMessage
    public static void SetFlagMessage(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagMessage", value);
    }

/// Gets FlagMessage
    public static bool GetFlagMessage(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagMessage");
    }

/// Sets FlagIsAlarm
    public static void SetFlagIsAlarm(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagIsAlarm", value);
    }

/// Gets FlagIsAlarm
    public static bool GetFlagIsAlarm(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagIsAlarm");
    }

/// Sets FlagTreshold
    public static void SetFlagTreshold(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagTreshold", value);
    }

/// Gets FlagTreshold
    public static bool GetFlagTreshold(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagTreshold");
    }

/// Sets FlagToDelete
    public static void SetFlagToDelete(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagToDelete", value);
    }

/// Gets FlagToDelete
    public static bool GetFlagToDelete(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagToDelete");
    }

/// Sets FlagToCEL
    public static void SetFlagToCEL(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagToCEL", value);
    }

/// Gets FlagToCEL
    public static bool GetFlagToCEL(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagToCEL");
    }

/// Sets FlagInvisible
    public static void SetFlagInvisible(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagInvisible", value);
    }

/// Gets FlagInvisible
    public static bool GetFlagInvisible(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagInvisible");
    }

/// Sets FlagLimitIsMax
    public static void SetFlagLimitIsMax(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagLimitIsMax", value);
    }

/// Gets FlagLimitIsMax
    public static bool GetFlagLimitIsMax(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagLimitIsMax");
    }

/// Sets FlagLimitVar
    public static void SetFlagLimitVar(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagLimitVar", value);
    }

/// Gets FlagLimitVar
    public static bool GetFlagLimitVar(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagLimitVar");
    }

/// Sets FlagAQuit
    public static void SetFlagAQuit(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagAQuit", value);
    }

/// Gets FlagAQuit
    public static bool GetFlagAQuit(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagAQuit");
    }

/// Sets FlagBlinking
    public static void SetFlagBlinking(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagBlinking", value);
    }

/// Gets FlagBlinking
    public static bool GetFlagBlinking(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagBlinking");
    }

/// Sets FlagAlarmPrt
    public static void SetFlagAlarmPrt(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagAlarmPrt", value);
    }

/// Gets FlagAlarmPrt
    public static bool GetFlagAlarmPrt(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagAlarmPrt");
    }

/// Sets FlagFunction
    public static void SetFlagFunction(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagFunction", value);
    }

/// Gets FlagFunction
    public static bool GetFlagFunction(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagFunction");
    }

/// Sets FlagFunctionAML
    public static void SetFlagFunctionAML(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagFunctionAML", value);
    }

/// Gets FlagFunctionAML
    public static bool GetFlagFunctionAML(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagFunctionAML");
    }

/// Sets FlagFunctionETM
    public static void SetFlagFunctionETM(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagFunctionETM", value);
    }

/// Gets FlagFunctionETM
    public static bool GetFlagFunctionETM(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagFunctionETM");
    }

/// Sets FlagQuest
    public static void SetFlagQuest(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagQuest", value);
    }

/// Gets FlagQuest
    public static bool GetFlagQuest(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagQuest");
    }

/// Sets FlagLimitVariable
    public static void SetFlagLimitVariable(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagLimitVariable", value);
    }

/// Gets FlagLimitVariable
    public static bool GetFlagLimitVariable(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagLimitVariable");
    }

/// Sets FlagHelpFile
    public static void SetFlagHelpFile(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagHelpFile", value);
    }

/// Gets FlagHelpFile
    public static bool GetFlagHelpFile(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagHelpFile");
    }

/// Sets FlagHelpCapture
    public static void SetFlagHelpCapture(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagHelpCapture", value);
    }

/// Gets FlagHelpCapture
    public static bool GetFlagHelpCapture(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagHelpCapture");
    }

/// Sets FlagUser1
    public static void SetFlagUser1(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagUser1", value);
    }

/// Gets FlagUser1
    public static bool GetFlagUser1(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagUser1");
    }

/// Sets FlagUser2
    public static void SetFlagUser2(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagUser2", value);
    }

/// Gets FlagUser2
    public static bool GetFlagUser2(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagUser2");
    }

/// Sets FlagAComment
    public static void SetFlagAComment(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagAComment", value);
    }

/// Gets FlagAComment
    public static bool GetFlagAComment(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagAComment");
    }

/// Sets FlagACause
    public static void SetFlagACause(this IEditorLimitValue edLimit, bool value)
    {
      edLimit.SetDynamicProperty("FlagACause", value);
    }

/// Gets FlagACause
    public static bool GetFlagACause(this IEditorLimitValue edLimit)
    {
      return (bool) edLimit.GetDynamicProperty("FlagACause");
    }

  }
}