//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Recipe;

namespace zenonExtensions
{
  public static class StandardRecipeExtension
  {
/// Sets Name
    public static void SetRecipeName(this IStandardRecipe recipe, string value)
    {
      recipe.SetDynamicProperty("RecipeName", value);
    }

/// Gets Name
    public static string GetRecipeName(this IStandardRecipe recipe)
    {
      return (string) recipe.GetDynamicProperty("RecipeName");
    }

/// Sets Authorization level
    public static void SetPasswordLevel(this IStandardRecipe recipe, ushort value)
    {
      recipe.SetDynamicProperty("PasswordLevel", value);
    }

/// Gets Authorization level
    public static ushort GetPasswordLevel(this IStandardRecipe recipe)
    {
      return (ushort) recipe.GetDynamicProperty("PasswordLevel");
    }

/// Sets Write synchronously
    public static void SetSyncWrite(this IStandardRecipe recipe, bool value)
    {
      recipe.SetDynamicProperty("SyncWrite", value);
    }

/// Gets Write synchronously
    public static bool GetSyncWrite(this IStandardRecipe recipe)
    {
      return (bool) recipe.GetDynamicProperty("SyncWrite");
    }

/// Sets Timeout [ms]
    public static void SetSyncWriteTimeout(this IStandardRecipe recipe, uint value)
    {
      recipe.SetDynamicProperty("SyncWriteTimeout", value);
    }

/// Gets Timeout [ms]
    public static uint GetSyncWriteTimeout(this IStandardRecipe recipe)
    {
      return (uint) recipe.GetDynamicProperty("SyncWriteTimeout");
    }

/// Sets Equipment Groups
    public static void SetSystemModelGroup(this IStandardRecipe recipe, object value)
    {
      recipe.SetDynamicProperty("SystemModelGroup", value);
    }

/// Gets Equipment Groups
    public static object GetSystemModelGroup(this IStandardRecipe recipe)
    {
      return (object) recipe.GetDynamicProperty("SystemModelGroup");
    }

/// Sets Smart Object
    public static void SetSOSourceName(this IStandardRecipe recipe, string value)
    {
      recipe.SetDynamicProperty("SOSourceName", value);
    }

/// Gets Smart Object
    public static string GetSOSourceName(this IStandardRecipe recipe)
    {
      return (string) recipe.GetDynamicProperty("SOSourceName");
    }

  }
}