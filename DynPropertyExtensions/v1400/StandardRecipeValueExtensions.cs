//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Recipe;

namespace zenonExtensions
{
  public static class StandardRecipeValueExtension
  {
/// Sets Variable
    public static void SetVarName(this IStandardRecipeValue recipeValue, string value)
    {
      recipeValue.SetDynamicProperty("VarName", value);
    }

/// Gets Variable
    public static string GetVarName(this IStandardRecipeValue recipeValue)
    {
      return (string) recipeValue.GetDynamicProperty("VarName");
    }

/// Sets Identification
    public static void SetVarTagName(this IStandardRecipeValue recipeValue, string value)
    {
      recipeValue.SetDynamicProperty("VarTagName", value);
    }

/// Gets Identification
    public static string GetVarTagName(this IStandardRecipeValue recipeValue)
    {
      return (string) recipeValue.GetDynamicProperty("VarTagName");
    }

/// Sets Measuring unit
    public static void SetVarUnit(this IStandardRecipeValue recipeValue, string value)
    {
      recipeValue.SetDynamicProperty("VarUnit", value);
    }

/// Gets Measuring unit
    public static string GetVarUnit(this IStandardRecipeValue recipeValue)
    {
      return (string) recipeValue.GetDynamicProperty("VarUnit");
    }

/// Sets Minimum
    public static void SetMinimum(this IStandardRecipeValue recipeValue, double value)
    {
      recipeValue.SetDynamicProperty("Minimum", value);
    }

/// Gets Minimum
    public static double GetMinimum(this IStandardRecipeValue recipeValue)
    {
      return (double) recipeValue.GetDynamicProperty("Minimum");
    }

/// Sets Write set value
    public static void SetSetValue(this IStandardRecipeValue recipeValue, double value)
    {
      recipeValue.SetDynamicProperty("SetValue", value);
    }

/// Gets Write set value
    public static double GetSetValue(this IStandardRecipeValue recipeValue)
    {
      return (double) recipeValue.GetDynamicProperty("SetValue");
    }

/// Sets Maximum
    public static void SetMaximum(this IStandardRecipeValue recipeValue, double value)
    {
      recipeValue.SetDynamicProperty("Maximum", value);
    }

/// Gets Maximum
    public static double GetMaximum(this IStandardRecipeValue recipeValue)
    {
      return (double) recipeValue.GetDynamicProperty("Maximum");
    }

  }
}