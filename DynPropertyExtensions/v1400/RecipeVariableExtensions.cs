//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.RecipeGroupManager;

namespace zenonExtensions
{
  public static class RecipeVariableExtension
  {
/// Sets Use set value limits from variable
    public static void SetRangeFromVar(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("RangeFromVar", value);
    }

/// Gets Use set value limits from variable
    public static bool GetRangeFromVar(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("RangeFromVar");
    }

/// Sets min. value
    public static void SetMin(this IRecipeVariable rGMRecipeVar, double value)
    {
      rGMRecipeVar.SetDynamicProperty("Min", value);
    }

/// Gets min. value
    public static double GetMin(this IRecipeVariable rGMRecipeVar)
    {
      return (double) rGMRecipeVar.GetDynamicProperty("Min");
    }

/// Sets max. value
    public static void SetMax(this IRecipeVariable rGMRecipeVar, double value)
    {
      rGMRecipeVar.SetDynamicProperty("Max", value);
    }

/// Gets max. value
    public static double GetMax(this IRecipeVariable rGMRecipeVar)
    {
      return (double) rGMRecipeVar.GetDynamicProperty("Max");
    }

/// Sets Interlocking
    public static void SetInterlocking(this IRecipeVariable rGMRecipeVar, string value)
    {
      rGMRecipeVar.SetDynamicProperty("Interlocking", value);
    }

/// Gets Interlocking
    public static string GetInterlocking(this IRecipeVariable rGMRecipeVar)
    {
      return (string) rGMRecipeVar.GetDynamicProperty("Interlocking");
    }

/// Sets Visibility variable
    public static void SetVisibilityVar(this IRecipeVariable rGMRecipeVar, object value)
    {
      rGMRecipeVar.SetDynamicProperty("VisibilityVar", value);
    }

/// Gets Visibility variable
    public static object GetVisibilityVar(this IRecipeVariable rGMRecipeVar)
    {
      return (object) rGMRecipeVar.GetDynamicProperty("VisibilityVar");
    }

/// Sets Filter
    public static void SetFilter(this IRecipeVariable rGMRecipeVar, string value)
    {
      rGMRecipeVar.SetDynamicProperty("Filter", value);
    }

/// Gets Filter
    public static string GetFilter(this IRecipeVariable rGMRecipeVar)
    {
      return (string) rGMRecipeVar.GetDynamicProperty("Filter");
    }

/// Sets Screen Keyboard
    public static void SetKeyboard(this IRecipeVariable rGMRecipeVar, string value)
    {
      rGMRecipeVar.SetDynamicProperty("Keyboard", value);
    }

/// Gets Screen Keyboard
    public static string GetKeyboard(this IRecipeVariable rGMRecipeVar)
    {
      return (string) rGMRecipeVar.GetDynamicProperty("Keyboard");
    }

/// Sets Graphic recipe variable
    public static void SetShadowVariable(this IRecipeVariable rGMRecipeVar, object value)
    {
      rGMRecipeVar.SetDynamicProperty("ShadowVariable", value);
    }

/// Gets Graphic recipe variable
    public static object GetShadowVariable(this IRecipeVariable rGMRecipeVar)
    {
      return (object) rGMRecipeVar.GetDynamicProperty("ShadowVariable");
    }

/// Sets Variable name
    public static void SetVariable(this IRecipeVariable rGMRecipeVar, object value)
    {
      rGMRecipeVar.SetDynamicProperty("Variable", value);
    }

/// Gets Variable name
    public static object GetVariable(this IRecipeVariable rGMRecipeVar)
    {
      return (object) rGMRecipeVar.GetDynamicProperty("Variable");
    }

/// Sets Offset
    public static void SetOffset(this IRecipeVariable rGMRecipeVar, int value)
    {
      rGMRecipeVar.SetDynamicProperty("Offset", value);
    }

/// Gets Offset
    public static int GetOffset(this IRecipeVariable rGMRecipeVar)
    {
      return (int) rGMRecipeVar.GetDynamicProperty("Offset");
    }

/// Sets Apply authorization properties from variable
    public static void SetRightsPropertiesFromVariable(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("RightsPropertiesFromVariable", value);
    }

/// Gets Apply authorization properties from variable
    public static bool GetRightsPropertiesFromVariable(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("RightsPropertiesFromVariable");
    }

/// Sets Authorization level/level for "Perform"
    public static void SetPasswordlevel(this IRecipeVariable rGMRecipeVar, ushort value)
    {
      rGMRecipeVar.SetDynamicProperty("Passwordlevel", value);
    }

/// Gets Authorization level/level for "Perform"
    public static ushort GetPasswordlevel(this IRecipeVariable rGMRecipeVar)
    {
      return (ushort) rGMRecipeVar.GetDynamicProperty("Passwordlevel");
    }

/// Sets Comment for "Perform" required
    public static void SeteSignatureCommentRequiredForPerform(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("eSignatureCommentRequiredForPerform", value);
    }

/// Gets Comment for "Perform" required
    public static bool GeteSignatureCommentRequiredForPerform(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("eSignatureCommentRequiredForPerform");
    }

/// Sets RequireSignatureRGM
    public static void SetRequireSignatureRGM(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("RequireSignatureRGM", value);
    }

/// Gets RequireSignatureRGM
    public static bool GetRequireSignatureRGM(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("RequireSignatureRGM");
    }

/// Sets Signature necessary
    public static void SetRequireSignatureModeRGM(this IRecipeVariable rGMRecipeVar, ushort value)
    {
      rGMRecipeVar.SetDynamicProperty("RequireSignatureModeRGM", value);
    }

/// Gets Signature necessary
    public static ushort GetRequireSignatureModeRGM(this IRecipeVariable rGMRecipeVar)
    {
      return (ushort) rGMRecipeVar.GetDynamicProperty("RequireSignatureModeRGM");
    }

/// Sets Level for "Verify"
    public static void SeteSignatureVerificationLevel(this IRecipeVariable rGMRecipeVar, ushort value)
    {
      rGMRecipeVar.SetDynamicProperty("eSignatureVerificationLevel", value);
    }

/// Gets Level for "Verify"
    public static ushort GeteSignatureVerificationLevel(this IRecipeVariable rGMRecipeVar)
    {
      return (ushort) rGMRecipeVar.GetDynamicProperty("eSignatureVerificationLevel");
    }

/// Sets Comment for "Verify" required
    public static void SeteSignatureCommentRequiredForVerify(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("eSignatureCommentRequiredForVerify", value);
    }

/// Gets Comment for "Verify" required
    public static bool GeteSignatureCommentRequiredForVerify(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("eSignatureCommentRequiredForVerify");
    }

/// Sets Level for "Approve"
    public static void SeteSignatureApprobationLevel(this IRecipeVariable rGMRecipeVar, ushort value)
    {
      rGMRecipeVar.SetDynamicProperty("eSignatureApprobationLevel", value);
    }

/// Gets Level for "Approve"
    public static ushort GeteSignatureApprobationLevel(this IRecipeVariable rGMRecipeVar)
    {
      return (ushort) rGMRecipeVar.GetDynamicProperty("eSignatureApprobationLevel");
    }

/// Sets Comment for "Approve" required
    public static void SeteSignatureCommentRequiredForApprove(this IRecipeVariable rGMRecipeVar, bool value)
    {
      rGMRecipeVar.SetDynamicProperty("eSignatureCommentRequiredForApprove", value);
    }

/// Gets Comment for "Approve" required
    public static bool GeteSignatureCommentRequiredForApprove(this IRecipeVariable rGMRecipeVar)
    {
      return (bool) rGMRecipeVar.GetDynamicProperty("eSignatureCommentRequiredForApprove");
    }

/// Sets Signature text
    public static void SetSignatureTextRGM(this IRecipeVariable rGMRecipeVar, string value)
    {
      rGMRecipeVar.SetDynamicProperty("SignatureTextRGM", value);
    }

/// Gets Signature text
    public static string GetSignatureTextRGM(this IRecipeVariable rGMRecipeVar)
    {
      return (string) rGMRecipeVar.GetDynamicProperty("SignatureTextRGM");
    }

/// Sets Signature text editable
    public static void SetSignatureEditableRGM(this IRecipeVariable rGMRecipeVar, uint value)
    {
      rGMRecipeVar.SetDynamicProperty("SignatureEditableRGM", value);
    }

/// Gets Signature text editable
    public static uint GetSignatureEditableRGM(this IRecipeVariable rGMRecipeVar)
    {
      return (uint) rGMRecipeVar.GetDynamicProperty("SignatureEditableRGM");
    }

  }
}